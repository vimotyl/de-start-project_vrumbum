Добрый день!
В этом файле прилагаю комментарии по решению и вопросы, которые возникли в процессе выполнения проекта.

В файле solution.sql приложила все скрипты по созданию и заполнению таблиц.
В процессе заполнения я делала выборки, чтобы контролировать,
как загружаются данные. Их тоже оставила, но закомментировала.




< ЧАСТЬ 1 >
КОММЕНТАРИИ К ЗАПУСКУ РЕШЕНИЯ

Все скрипты запустить одной командой не получится,
так как я заполняла таблицу с сырыми данными через терминал.

Поэтому необходимо выполнить три шага:
Шаг 1. Запустить первые два скрипта для создания схемы raw_data и таблицы sales.
Шаг 2. Загрузить данные в таблицу sales через терминал командой:
\copy raw_data.sales FROM '/Users/cars.csv' CSV HEADER NULL 'null';
Шаг 3. Запустить все оставшиеся скрипты.





< ЧАСТЬ 2 >
ОПИСАНИЕ ВЫБРАННОЙ МОДЕЛИ ДАННЫХ

Таблицы:
 * clients - информация о клиентах;
 * origin - информация о странах-производителях автомобилей;
 * brands - информация о брендах автомобилей;
 * models - информация о моделях автомобилей;
 * colors - информация о цветах моделей автомобилей;
 * cars - информация об автомобилях (выбранные модель + цвет);
 * orders - информация о совершенных заказах.



Описание каждой таблицы


1) Таблица clients хранит в себе информацию о клиентах.
Поля: id, service_person_name, appeal, first_name, last_name, status, phone.

Поле id - суррогатный первичный ключ с автоинкрементом.
Поле service_person_name - служебное, куда изначально загружаю полное имя клиента,
а после заполнения всех таблиц делим это поле на четыре отдельных поля:
- first_name (имя)
- last_name (фамилия)
- appeal (обращение, например, Dr., Miss, Mr., Mrs.)
- status (степень/дополнение к имени, например, MD, Jr.)
После разделения полного имени служебное поле service_person_name удаляю.

Поле phone - номер телефона клиента в том виде, в котором он был указан в исходной таблице.
Я отказалась от идеи привести запись номера к единому формату, так как в таблице слишком много вариаций.
Чтобы при преобразовании не потерять данные, я бы уточнила у заказчика, что означает каждый формат записи.
И после этого сделала преобразование к единому формату.




2) Таблица origin хранит в себе информацию о странах-производителях автомобилей.
Поля: id, country.

Таблица используется как справочник стран.
Поле id - суррогатный первичный ключ с автоинкрементом.
Поле country - наименование страны.




3) Таблица brands хранит в себе информацию о брендах автомобилей.
Поля: id, name, brand_id.

Таблица используется как справочник брендов авто.
Поле id - суррогатный первичный ключ с автоинкрементом.
Поле name - наименование бренда.
Поле brand_id - страна-производитель, внешний ключ ссылается на id страны в таблице origin(id).





4) Таблица models хранит в себе информацию о моделях автомобилей каждого бренда.
Поля: id, name, brand_id, is_electric_car, gasoline_consumption.

Поле id - суррогатный первичный ключ с автоинкрементом.
Поле name - наименование модели авто (например, 'A3').
Поле brand_id - id бренда авто, внешний ключ ссылается на id бренда в таблице brands(id).
Поле is_electric_car - принимает значение TRUE, если это электромобиль, иначе FALSE.
Поле gasoline_consumption - среднее потребление бензина, литр на 100 км, у электромобилей это значение отсутствует.




5) Таблица colors хранит в себе информацию о возможных цветах моделей автомобилей.
Поля: id, name.

Таблица используется как справочник цветов автомобилей.
Поле id - суррогатный первичный ключ с автоинкрементом.
Поле name - название цвета.





6) Таблица cars хранит в себе информацию о конкретных автомобилях (выбранные модель + цвет);
Поля: id, model_id, color_id.


Поле id - суррогатный первичный ключ с автоинкрементом.
Поле model_id - модель авто, внешний ключ ссылается на id модели в таблице models(id).
Поле color_id - id цвета, внешний ключ ссылается на id цвета в таблице colors(id).




7) Таблица orders хранит в себе информацию о совершенных заказах.
Поля: id, order_date, client_id, car_id, price, discount_percent.


Поле id - суррогатный первичный ключ с автоинкрементом.
Поле order_date - дата совершения покупки.
Поле client_id - номер клиента, внешний ключ ссылается на id клиента в таблице clients(id).
Поле car_id - номер купленного автомобиля, внешний ключ ссылается на id авто в таблице cars(id).
Поле price - полная стоимость заказа, без учета скидки.
Поле discount_percent - скидка в процентах, по умолчанию 0.


В исходных даных указана стоимость заказа с учетом скидки. Это неудобно и неоднозначно.
Например, если скидку в базе изменят, то нужно пересчитывать стоимость со скидкой.
Или если не указан процент скидки, это значит, что ее нет или забыли указать?
Поэтому приняла решение хранить полную стоимость заказа и отдельно процент скидки.
Имея эти данные, при необходимости можно вычислять стоимость со скидкой.





< ЧАСТЬ 3 >
ВОПРОСЫ

Спасибо! Правки внесла, вопросов больше нет :)

